services:
  mongo:
    container_name: mongo
    hostname: mongo
    image: "mongo:4.4"
    restart: always
    volumes:
      - ./data/mongo/db:/data/db
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - sclab-network
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=changeThisMongoPassword

  mail:
    container_name: mail
    hostname: mail
    image: "bytemark/smtp"
    restart: always
    networks:
      - sclab-network
  
  redis:
    container_name: redis
    hostname: redis
    image: "bitnami/redis:7.4.1"
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
#      - ALLOW_EMPTY_PASSWORD=no
#      - REDIS_ALLOW_REMOTE_CONNECTIONS=yes
#      - REDIS_PASSWORD=changeThisRedisPassword
#      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - sclab-network

  qdrant:
    container_name: qdrant
    hostname: qdrant
    image: "qdrant/qdrant:v1.13.2"
    restart: always
    volumes:
      - ./data/qdrant:/qdrant/storage
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - sclab-network
#    environment:
#      - QDRANT__SERVICE__HOST=0.0.0.0
#      - QDRANT__SERVICE__API_KEY=changeThisQdrantApiKey

  webapp:
    hostname: webapp
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-webapp:latest"
    restart: always
    ports:
      - "80"
      #- "443"
    volumes:
      - ./data/webapp:/data
      - ./data/webapp/logs:/data/logs
      - ./data/webapp/files:/data/files
      - ./jwt:/data/jwt
      - ./cert:/data/cert
    env_file:
      - ./common.env
      - ./webapp.env
    environment:
      - METEOR_SETTINGS=${METEOR_SETTINGS}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - qdrant
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - sclab-network

  gis-process:
    container_name: gis-process
    hostname: gis-process
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-gis-process:latest"
    restart: always
    volumes:
      - ./data/gis-process/logs:/data/logs
    env_file:
      - ./common.env
      - ./gis-process.env
    environment:
      - METEOR_SETTINGS=${METEOR_SETTINGS}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - webapp
    networks:
      - sclab-network
  
  mqtt-client:
    container_name: mqtt-client
    hostname: mqtt-client
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-mqtt-client:latest"
    restart: always
    volumes:
      - ./data/mqtt-client/logs:/data/logs
    env_file:
      - ./common.env
      - ./mqtt-client.env
    environment:
      - METEOR_SETTINGS=${METEOR_SETTINGS}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - webapp
    networks:
      - sclab-network
      
  mqtt-broker:
    container_name: mqtt-broker
    hostname: mqtt-broker
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-mqtt-broker:latest"
    restart: always
    ports:
      - "8883:8883"
      - "8888:8888"
    volumes:
      - ./data/mqtt-broker/logs:/data/logs
      - ./cert:/data/cert
      - ./jwt:/data/jwt
    env_file:
      - ./common.env
      - ./mqtt-broker.env
    environment:
      - METEOR_SETTINGS=${METEOR_SETTINGS}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - webapp
    networks:
      - sclab-network
      
  kafka-client:
    container_name: kafka-client
    hostname: kafka-client
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-kafka-client:latest"
    restart: always
    volumes:
      - ./data/kafka-client/logs:/data/logs
    env_file:
      - ./common.env
      - ./kafka-client.env
    environment:
      - METEOR_SETTINGS=${METEOR_SETTINGS}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - webapp
    networks:
      - sclab-network
  
  ai-service:
    container_name: ai-service
    hostname: ai-service
    image: "873379329511.dkr.ecr.ap-northeast-2.amazonaws.com/sclabio/onpremise-ai-service:latest"
    restart: always
    volumes:
      - ./data/ai-service/logs:/data/logs
    env_file:
      - ./common.env
      - ./ai-service.env
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - mongo
      - redis
      - qdrant
      - webapp
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - sclab-network

  sclab-agent:
    container_name: sclab-agent
    hostname: sclab-agent
    image: "sclabio/sclab-agent:latest"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    volumes:
      - ./data/db-agent:/data
      - ./jwt:/data/jwt
      - ./cert:/data/cert
    env_file:
      - ./db-agent.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - sclab-network

  sclab-proxy:
    hostname: sclab-proxy
    image: nginx:alpine3.18
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./cert:/etc/ssl
    restart: always
    depends_on:
      - webapp
    networks:
      - sclab-network
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

networks:
  sclab-network:
    external: true
